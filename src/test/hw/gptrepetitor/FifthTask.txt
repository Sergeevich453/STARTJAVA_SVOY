–†–µ–∞–ª–∏–∑—É–µ–º –∑–∞–¥–∞—á—É —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª, –∏—Ö —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –∏ –≤—ã–≤–æ–¥–æ–º. –í —Å–ª—É—á–∞–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ–æ–±—â–∏—Ç –æ–± –æ—à–∏–±–∫–µ.

–ö–æ–¥:
java
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Random;

public class UniqueArrayGenerator {
    public static void main(String[] args) {
        // –¢–µ—Å—Ç–æ–≤—ã–µ –≤—ã–∑–æ–≤—ã –º–µ—Ç–æ–¥–∞
        generateUniqueArray(-30, -10, 23);
        generateUniqueArray(10, 50, 10);
        generateUniqueArray(-34, -34, 0);
        generateUniqueArray(-1, 2, -3);
        generateUniqueArray(5, -8, 2);
    }

    private static void generateUniqueArray(int start, int end, int numbersPerRow) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if (start > end) {
            System.out.printf("–û—à–∏–±–∫–∞: –ª–µ–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ (%d) > –ø—Ä–∞–≤–æ–π (%d)%n", start, end);
            return;
        }

        if (numbersPerRow < 1) {
            System.out.printf("–û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –≤ —Å—Ç—Ä–æ–∫–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1 (%d)%n", numbersPerRow);
            return;
        }

        int rangeLength = end - start + 1;
        int arrayLength = (int) (rangeLength * 0.75);

        if (arrayLength <= 0) {
            System.out.printf("–û—à–∏–±–∫–∞: –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0 (%d)%n", rangeLength);
            return;
        }

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
        HashSet<Integer> uniqueNumbers = new HashSet<>();
        Random random = new Random();
        while (uniqueNumbers.size() < arrayLength) {
            int randomNum = start + random.nextInt(rangeLength);
            uniqueNumbers.add(randomNum);
        }

        // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        List<Integer> sortedNumbers = new ArrayList<>(uniqueNumbers);
        Collections.sort(sortedNumbers);

        // –í—ã–≤–æ–¥ —á–∏—Å–µ–ª –ø–æ —Å—Ç—Ä–æ–∫–∞–º
        System.out.println("\n–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞:");
        for (int i = 0; i < sortedNumbers.size(); i++) {
            System.out.printf("%4d", sortedNumbers.get(i));
            if ((i + 1) % numbersPerRow == 0 || i == sortedNumbers.size() - 1) {
                System.out.println();
            }
        }
    }
}
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:

–õ–µ–≤—ã–π –ø—Ä–µ–¥–µ–ª –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å –ø—Ä–∞–≤—ã–π.
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –≤ —Å—Ç—Ä–æ–∫–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 1.
–î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.
–†–∞—Å—á–µ—Ç –¥–ª–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞:

–î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 75% –æ—Ç –¥–ª–∏–Ω—ã –æ—Ç—Ä–µ–∑–∫–∞ 
[
ùë†
ùë°
ùëé
ùëü
ùë°
,
ùëí
ùëõ
ùëë
]
[start,end].
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª:

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HashSet, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª.
–°–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –≥—Ä–∞–Ω–∏—Ü–∞—Ö.
–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ –≤—ã–≤–æ–¥:

–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é Collections.sort.
–ß–∏—Å–ª–∞ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —á–∏—Å–µ–ª –≤ —Å—Ç—Ä–æ–∫–µ.
–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
–î–ª—è –≤—ã–∑–æ–≤–∞ generateUniqueArray(-30, -10, 5):

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞:
 -30 -28 -25 -24 -23
 -21 -20 -18 -17 -16
 -15 -14 -12 -11 -10
–î–ª—è –≤—ã–∑–æ–≤–∞ generateUniqueArray(10, 50, 10):

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞:
  10  11  13  15  18  19  22  24  25  27
  29  31  34  35  36  39  40  42  44  46
  48  49  50
–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:
generateUniqueArray(-34, -34, 0):

makefile
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
–û—à–∏–±–∫–∞: –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0 (1)
generateUniqueArray(-1, 2, -3):

makefile
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
–û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –≤ —Å—Ç—Ä–æ–∫–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1 (-3)
generateUniqueArray(5, -8, 2):

makefile
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
–û—à–∏–±–∫–∞: –ª–µ–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ (5) > –ø—Ä–∞–≤–æ–π (-8)
