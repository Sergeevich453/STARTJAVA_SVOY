Рассмотрим решение задачи, в котором метод принимает массив целых чисел с использованием varargs, вычисляет 
факториалы для каждого элемента и обрабатывает случаи с отрицательными числами и недопустимыми вводами.

Код:
java
Копировать код
import java.util.Arrays;

public class FactorialCalculator {
    public static void main(String[] args) {
        // Вызовы метода с различными входными данными
        calculateAndPrintFactorials();
        calculateAndPrintFactorials((int[]) null);
        calculateAndPrintFactorials(8, 0, 9);
        calculateAndPrintFactorials(-3, 1, 7, 13);
        calculateAndPrintFactorials(-22, -0);
    }

    private static void calculateAndPrintFactorials(int... numbers) {
        if (numbers == null) {
            System.out.println("Ошибка: массив равен null, обработка невозможна.");
            return;
        }

        if (numbers.length == 0) {
            System.out.println("Ошибка: массив нулевой длины, обработка невозможна.");
            return;
        }

        System.out.println("Входные данные: " + Arrays.toString(numbers));
        for (int number : numbers) {
            if (number < 0) {
                System.out.println("Ошибка: факториал " + number + "! не определен.");
            } else {
                String factorialResult = factorialDetails(number);
                System.out.println(factorialResult);
            }
        }
        System.out.println();
    }

    private static String factorialDetails(int number) {
        if (number == 0 || number == 1) {
            return number + "! = 1";
        }

        StringBuilder calculation = new StringBuilder(number + "! = ");
        long factorial = 1;

        for (int i = 1; i <= number; i++) {
            factorial *= i;
            calculation.append(i);
            if (i < number) {
                calculation.append(" * ");
            }
        }

        calculation.append(" = ").append(factorial);
        return calculation.toString();
    }
}
Объяснение:
Метод calculateAndPrintFactorials:

Принимает массив чисел (с использованием varargs).
Проверяет случаи, когда массив равен null или имеет длину 0.
Для каждого числа в массиве:
Если число отрицательное, выводит ошибку.
Если число неотрицательное, вызывает метод factorialDetails.
Метод factorialDetails:

Вычисляет факториал числа и собирает строку в формате:
Копировать код
4! = 1 * 2 * 3 * 4 = 24
Использует цикл для вычисления произведения и построения строки.
Метод main:

Тестирует разные входные данные, включая пустые массивы и отрицательные числа.
Результат выполнения:
makefile
Копировать код
Ошибка: массив нулевой длины, обработка невозможна.

Ошибка: массив равен null, обработка невозможна.

Входные данные: [8, 0, 9]
8! = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 = 40320
0! = 1
9! = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 = 362880

Входные данные: [-3, 1, 7, 13]
Ошибка: факториал -3! не определен.
1! = 1
7! = 1 * 2 * 3 * 4 * 5 * 6 * 7 = 5040
13! = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 = 6227020800

Входные данные: [-22, 0]
Ошибка: факториал -22! не определен.
0! = 1
Ключевые моменты:
Обработка некорректных данных (null, отрицательные числа).
Формат вывода соответствует условию.
Код легко масштабируется, если необходимо изменить или дополнить функционал.
