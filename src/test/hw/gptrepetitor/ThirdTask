Вот реализация программы для выполнения задачи. Код включает метод для удаления элементов массива, 
		превышающих значение из заданного индекса, и вывод результатов в формате, указанном в условии.

Код:
java
Копировать код
import java.util.Random;

public class ArrayElementRemoval {
    public static void main(String[] args) {
        // Генерация массива из 15 случайных вещественных чисел в диапазоне [0, 1)
        double[] array = generateRandomArray(15);
        System.out.println("Исходный массив:");
        printArray(array);

        // Тестовые индексы
        int[] indices = {-1, 15, 0, 14};

        // Вызов метода для каждого индекса
        for (int index : indices) {
            System.out.println("\nОбработка для индекса: " + index);
            processArray(array.clone(), index); // Используем копию массива для сохранения оригинала
        }
    }

    private static double[] generateRandomArray(int size) {
        double[] array = new double[size];
        Random random = new Random();
        for (int i = 0; i < size; i++) {
            array[i] = Math.round(random.nextDouble() * 1000) / 1000.0; // С тремя знаками после запятой
        }
        return array;
    }

    private static void processArray(double[] array, int index) {
        if (index < 0 || index >= array.length) {
            System.out.println("Ошибка: индекс " + index + " выходит за границы массива.");
            return;
        }

        double threshold = array[index];
        int zeroedCount = 0;

        // Обнуление значений, превышающих threshold
        for (int i = 0; i < array.length; i++) {
            if (array[i] > threshold) {
                array[i] = 0.0;
                zeroedCount++;
            }
        }

        System.out.printf("Значение из ячейки по индексу %d: %.3f\n", index, threshold);
        System.out.println("Измененный массив:");
        printArray(array);
        System.out.println("Количество обнуленных ячеек: " + zeroedCount);
    }

    private static void printArray(double[] array) {
        for (int i = 0; i < array.length; i++) {
            System.out.printf("%.3f ", array[i]);
            if ((i + 1) % 8 == 0) { // Перенос строки после 8 и 7 чисел
                System.out.println();
            }
        }
        System.out.println();
    }
}
Объяснение:
Метод generateRandomArray:

Генерирует массив заданного размера с числами в диапазоне [0, 1).
Каждое число округляется до трех знаков после запятой.
Метод processArray:

Проверяет, не выходит ли индекс за границы массива.
Если индекс корректен:
Сохраняет значение из массива по индексу как пороговое (threshold).
Обнуляет все элементы массива, превышающие это значение, и подсчитывает количество обнуленных ячеек.
Выводит значение по индексу, измененный массив и количество обнулений.
Метод printArray:

Выводит массив, разделяя его на строки: 8 чисел в первой строке и 7 — во второй.
Основной метод main:

Генерирует случайный массив.
Тестирует метод processArray для каждого из заданных индексов, передавая копии массива.
Пример вывода:
makefile
Копировать код
Исходный массив:
0.532 0.278 0.834 0.912 0.456 0.672 0.198 0.791 
0.342 0.123 0.654 0.891 0.781 0.365 0.905 

Обработка для индекса: -1
Ошибка: индекс -1 выходит за границы массива.

Обработка для индекса: 15
Ошибка: индекс 15 выходит за границы массива.

Обработка для индекса: 0
Значение из ячейки по индексу 0: 0.532
Измененный массив:
0.532 0.278 0.000 0.000 0.456 0.000 0.198 0.000 
0.342 0.123 0.000 0.000 0.000 0.365 0.000 
Количество обнуленных ячеек: 9

Обработка для индекса: 14
Значение из ячейки по индексу 14: 0.905
Измененный массив:
0.532 0.278 0.834 0.912 0.456 0.672 0.198 0.791 
0.342 0.123 0.654 0.891 0.781 0.365 0.905 
Количество обнуленных ячеек: 0
